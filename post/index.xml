<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on mkkkk</title>
    <link>https://mkkkk-create.github.io/post/</link>
    <description>Recent content in Posts on mkkkk</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 25 Nov 2024 22:40:04 +0800</lastBuildDate>
    <atom:link href="https://mkkkk-create.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>BF算法与KMP算法</title>
      <link>https://mkkkk-create.github.io/2024/bf%E7%AE%97%E6%B3%95%E4%B8%8Ekmp%E7%AE%97%E6%B3%95/</link>
      <pubDate>Mon, 25 Nov 2024 22:40:04 +0800</pubDate>
      <guid>https://mkkkk-create.github.io/2024/bf%E7%AE%97%E6%B3%95%E4%B8%8Ekmp%E7%AE%97%E6%B3%95/</guid>
      <description>BF算法(暴力匹配算法) 算法描述 注：模式匹配不一定是从主串的第一个位置开始，可以指定主串中开始查找的起始位置pos。 分别利用i和j指针表示主</description>
    </item>
    <item>
      <title>单链表及相关操作</title>
      <link>https://mkkkk-create.github.io/2024/%E5%8D%95%E9%93%BE%E8%A1%A8%E5%8F%8A%E7%9B%B8%E5%85%B3%E6%93%8D%E4%BD%9C/</link>
      <pubDate>Sat, 09 Nov 2024 23:38:07 +0800</pubDate>
      <guid>https://mkkkk-create.github.io/2024/%E5%8D%95%E9%93%BE%E8%A1%A8%E5%8F%8A%E7%9B%B8%E5%85%B3%E6%93%8D%E4%BD%9C/</guid>
      <description>单链表定义 单链表通过一组任意的存储单元来存储线性表中的数据元素，不需要使用地址连续的存储单元，因此它不要求在逻辑上相邻的两个元素在物理位置上</description>
    </item>
    <item>
      <title>0xgame</title>
      <link>https://mkkkk-create.github.io/2024/0xgame/</link>
      <pubDate>Fri, 11 Oct 2024 18:46:04 +0800</pubDate>
      <guid>https://mkkkk-create.github.io/2024/0xgame/</guid>
      <description>0xGame RE WP Week1 BabyBase 查壳无壳ida打开，进入主函数 发现有个encode函数，跟进 发现是普通的base64加密，拿到密文之后用cyber解一下即可 0xGame{N0w_y0u_kn0w_B4se64_Enc0d1ng_w3ll!} BinaryMaster 查</description>
    </item>
    <item>
      <title>第二届黄河流域网络安全技能挑战赛</title>
      <link>https://mkkkk-create.github.io/2024/%E7%AC%AC%E4%BA%8C%E5%B1%8A%E9%BB%84%E6%B2%B3%E6%B5%81%E5%9F%9F%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E6%8A%80%E8%83%BD%E6%8C%91%E6%88%98%E8%B5%9B/</link>
      <pubDate>Sun, 22 Sep 2024 19:20:28 +0800</pubDate>
      <guid>https://mkkkk-create.github.io/2024/%E7%AC%AC%E4%BA%8C%E5%B1%8A%E9%BB%84%E6%B2%B3%E6%B5%81%E5%9F%9F%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E6%8A%80%E8%83%BD%E6%8C%91%E6%88%98%E8%B5%9B/</guid>
      <description>复现了一下久远的比赛哈哈哈 easypyc 题目直接给了pyc文件，我们直接uncompyle6反编译 可以看到图片中显示反汇编失败原因，我们知道这是pyth</description>
    </item>
    <item>
      <title>从工具到手动学会UPX脱壳</title>
      <link>https://mkkkk-create.github.io/2024/%E4%BB%8E%E5%B7%A5%E5%85%B7%E5%88%B0%E6%89%8B%E5%8A%A8%E5%AD%A6%E4%BC%9Aupx%E8%84%B1%E5%A3%B3/</link>
      <pubDate>Fri, 20 Sep 2024 11:17:49 +0800</pubDate>
      <guid>https://mkkkk-create.github.io/2024/%E4%BB%8E%E5%B7%A5%E5%85%B7%E5%88%B0%E6%89%8B%E5%8A%A8%E5%AD%A6%E4%BC%9Aupx%E8%84%B1%E5%A3%B3/</guid>
      <description>本篇博客以BaseCTF的UPX压缩壳的题目为基础进行讲解 什么是压缩壳 加壳：其实是利用特殊的算法，对EXE、DLL文件里的资源进行压缩。类似</description>
    </item>
    <item>
      <title>Base64算法详解</title>
      <link>https://mkkkk-create.github.io/2024/base64%E7%AE%97%E6%B3%95%E8%AF%A6%E8%A7%A3/</link>
      <pubDate>Wed, 18 Sep 2024 00:57:35 +0800</pubDate>
      <guid>https://mkkkk-create.github.io/2024/base64%E7%AE%97%E6%B3%95%E8%AF%A6%E8%A7%A3/</guid>
      <description>编码原理 Base64编码是将字符串以每3个8比特(bit)的字节子序列拆分成4个6比特(bit)的字节(6比特有效字节，其实也是8比特的字节</description>
    </item>
    <item>
      <title>WMCTF</title>
      <link>https://mkkkk-create.github.io/2024/wmctf/</link>
      <pubDate>Wed, 11 Sep 2024 07:37:15 +0800</pubDate>
      <guid>https://mkkkk-create.github.io/2024/wmctf/</guid>
      <description>2024WMCTF Re复现 Rustdriod 发现是apk文件，拖入jadx查看 发现加载wmcheck的包，apktool解包打开so文件，定位到check函数 我们发现这是类</description>
    </item>
  </channel>
</rss>
